name: AgentNet CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Verify imports
      run: |
        python -c "import agentnet; print('✅ AgentNet imported successfully')"
        python -c "from agentnet.schemas import TurnMessage; print('✅ Schema imports working')"
        python -c "import pytest; print('✅ pytest available')"
        python -c "import pydantic; print('✅ pydantic available')"
        python -c "import prometheus_client; print('✅ prometheus_client available')"
        python -c "import opentelemetry; print('✅ opentelemetry available')"

    - name: Run tests with pytest
      run: |
        python -m pytest tests/ -v --tb=short --maxfail=5

    - name: Run linting
      run: |
        black --check --diff agentnet/
        isort --check-only --diff agentnet/
        flake8 agentnet/ --exclude=__pycache__,*.pyc --max-line-length=88 --extend-ignore=E203,W503

    - name: Generate test coverage
      run: |
        coverage run -m pytest tests/
        coverage report -m
        coverage html

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      if: matrix.python-version == '3.11'
      with:
        name: coverage-reports
        path: htmlcov/

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Build distribution
      run: |
        python -m pip install --upgrade pip build
        python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-packages
        path: dist/