[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentnet"
version = "0.5.0"
description = "A governed multi-agent reasoning platform"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "GPL-3.0"}
authors = [
    {name = "AgentNet Contributors"}
]
keywords = ["ai", "llm", "multi-agent", "reasoning", "policy", "governance"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

# Core dependencies for Phase 0
dependencies = [
    "typing-extensions>=4.0.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
# Phase 1+ dependencies (optional for Phase 0)
full = [
    "networkx>=3.0",
    "numpy>=1.21.0",
    "faiss-cpu>=1.7.0",
    "openai>=1.0.0",
    "chromadb>=0.4.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=1.0.0",
    "coverage>=6.0.0",
]

# All dependencies
all = ["agentnet[full,dev]"]

[project.urls]
"Homepage" = "https://github.com/V1B3hR/agentnet"
"Bug Reports" = "https://github.com/V1B3hR/agentnet/issues"
"Source" = "https://github.com/V1B3hR/agentnet"

[tool.setuptools.packages.find]
where = ["."]
include = ["agentnet*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agentnet"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]